/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_uk.h"
#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        ctrl_last_to_settings {
            bindings = <&mo 6>;
            key-positions = <40 35>;
        };

        NAV {
            bindings = <&to 3>;
            key-positions = <37 27>;
        };

        NUM {
            bindings = <&to 4>;
            key-positions = <37 28>;
        };

        ADJ {
            bindings = <&to 5>;
            key-positions = <37 29>;
        };

        EN {
            bindings = <&to 0>;
            key-positions = <40 30>;
        };

        RU {
            bindings = <&to 1>;
            key-positions = <40 31>;
        };

        UA {
            bindings = <&to 2>;
            key-positions = <40 32>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        EN {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | ENTR |
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   | ./, | '/" |  /* | EQU |
            //                    | GUI | LWR | SPC |   | SPC | L2   | L1  |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E     &kp R         &kp T        &kp Y          &kp U      &kp I          &kp O                  &kp P          &trans
&kp TAB     &kp A  &kp S  &kp D     &kp F         &kp G        &kp H          &kp J      &kp K          &kp L                  &kp SEMI       &trans
&kp LSHIFT  &kp Z  &kp X  &kp C     &kp V         &kp B        &kp N          &kp M      &mt COMMA DOT  &mt SQT DOUBLE_QUOTES  &mt STAR FSLH  &trans
                          &kp LGUI  &kp LEFT_ALT  &kp SPACE    &kp BACKSPACE  &kp LCTRL  &kp ENTER
            >;
        };

        RU {
            bindings = <
&kp ESCAPE  &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &mt RU_CYRILLIC_E RU_CYRILLIC_IE    &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE                              &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp RU_CYRILLIC_HA
&kp TAB     &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                  &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O                                &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LSHIFT  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                   &kp RU_CYRILLIC_TE  &mt RU_CYRILLIC_HARD_SIGN RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU     &kp RU_FSLH          &trans
                                                           &kp LGUI            &kp LEFT_ALT        &kp SPACE                           &kp BACKSPACE       &kp LCTRL                                        &kp ENTER
            >;
        };

        UA {
            bindings = <
&kp ESCAPE  &kp UK_CYRILLIC_SHORT_I  &kp UK_CYRILLIC_TSE                   &kp UK_CYRILLIC_U   &kp UK_CYRILLIC_KA  &mt UK_UKRAINIAN_IE UK_CYRILLIC_IE    &kp UK_CYRILLIC_EN  &mt UK_CYRILLIC_GHE_UPTURN UK_CYRILLIC_GHE  &kp UK_CYRILLIC_SHA  &kp UK_CYRILLIC_SHCHA  &kp UK_CYRILLIC_ZE   &kp UK_CYRILLIC_HA
&kp TAB     &kp UK_CYRILLIC_EF       &mt UK_CYRILLIC_YI UK_BYELORUSSIAN_I  &kp UK_CYRILLIC_VE  &kp UK_CYRILLIC_A   &kp UK_CYRILLIC_PE                    &kp UK_CYRILLIC_ER  &kp UK_CYRILLIC_O                           &kp UK_CYRILLIC_EL   &kp UK_CYRILLIC_DE     &kp UK_CYRILLIC_ZHE  &kp UK_UKRAINIAN_IE
&kp LSHIFT  &kp UK_CYRILLIC_YA       &kp UK_CYRILLIC_CHE                   &kp UK_CYRILLIC_ES  &kp UK_CYRILLIC_EM  &kp UK_CYRILLIC_I                     &kp UK_CYRILLIC_TE  &kp UK_CYRILLIC_SOFT_SIGN                   &kp UK_CYRILLIC_BE   &kp UK_CYRILLIC_YU     &kp RU_FSLH          &trans
                                                                           &kp LGUI            &kp LEFT_ALT        &kp SPACE                             &kp BACKSPACE       &kp LCTRL                                   &kp ENTER
            >;
        };

        NAV_0 {
            bindings = <
&trans  &msc SCRL_DOWN  &trans          &mmv_accel_0 MOVE_UP    &trans           &trans       &to 8   &trans    &kp UP_ARROW  &trans     &kp PG_UP      &kp HOME
&to 0   &msc SCRL_UP    &mmv_accel_0 MOVE_LEFT  &mmv_accel_0 MOVE_DOWN  &mmv_accel_0 MOVE_RIGHT  &trans       &to 7   &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN  &kp END
&trans  &trans          &trans          &trans          &trans           &mkp RCLK    &to 3   &trans    &trans        &trans     &trans         &trans
                                        &to 4           &mkp LCLK        &trans       &trans  &trans    &trans
            >;
        };

        NUM {
            bindings = <
&kp GRAVE  &kp DELETE      &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp NON_US_BACKSLASH    &kp SLASH  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS  &kp BACKSPACE
&to 0      &kp UNDERSCORE  &kp EQUAL  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans                  &kp STAR   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS   &kp EQUAL
&trans     &kp K_UNDO      &kp K_CUT  &kp K_COPY            &kp K_PASTE            &kp K_REDO              &kp COMMA  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT    &kp ENTER
                                      &to 5                 &trans                 &trans                  &trans     &trans        &kp N0
            >;
        };

        ADJ {
            bindings = <
&trans  &trans  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &trans    &trans  &kp K_LOCK  &bl BL_INC            &bl BL_DEC            &trans  &trans
&to 0   &trans  &kp C_PREV    &kp C_PLAY_PAUSE  &kp C_NEXT    &trans    &trans  &trans      &kp LG(LS(NUMBER_4))  &kp LG(LS(NUMBER_5))  &trans  &trans
&trans  &trans  &trans        &trans            &trans        &trans    &trans  &trans      &trans                &trans                &trans  &trans
                              &to 0             &trans        &trans    &trans  &trans      &trans
            >;
        };

        setings {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &trans  &trans  &trans  &trans  &trans  &sys_reset
&trans  &bt BT_CLR    &trans        &trans        &trans        &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans            &trans  &trans  &trans  &trans  &trans  &bootloader
                                    &trans        &trans        &trans            &trans  &trans  &trans
            >;
        };

        NAV_1 {
            bindings = <
&trans  &msc SCRL_DOWN  &trans          &mmv_accel_1 MOVE_UP    &trans           &trans       &to 8   &trans    &kp UP_ARROW  &trans     &kp PG_UP      &kp HOME
&to 0   &msc SCRL_UP    &mmv_accel_1 MOVE_LEFT  &mmv_accel_1 MOVE_DOWN  &mmv_accel_1 MOVE_RIGHT  &trans       &to 7   &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN  &kp END
&trans  &trans          &trans          &trans          &trans           &mkp RCLK    &to 3   &trans    &trans        &trans     &trans         &trans
                                        &to 4           &mkp LCLK        &trans       &trans  &trans    &trans
            >;
        };

        NAV_2 {
            bindings = <
&trans  &msc SCRL_DOWN  &trans          &mmv_accel_2 MOVE_UP    &trans           &trans       &to 8   &trans    &kp UP_ARROW  &trans     &kp PG_UP      &kp HOME
&to 0   &msc SCRL_UP    &mmv_accel_2 MOVE_LEFT  &mmv_accel_2 MOVE_DOWN  &mmv_accel_2 MOVE_RIGHT  &trans       &to 7   &kp LEFT  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN  &kp END
&trans  &trans          &trans          &trans          &trans           &mkp RCLK    &to 3   &trans    &trans        &trans     &trans         &trans
                                        &to 4           &mkp LCLK        &trans       &trans  &trans    &trans
            >;
        };
    };
};

//For new Layers
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
